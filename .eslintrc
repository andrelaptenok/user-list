{
  "root": true,
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:css-modules/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],
      "parserOptions": {
        "project": [
          "./tsconfig.json"
        ]
      },
      "rules": {
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-assignment": 0,
        "@typescript-eslint/no-var-requires": 0,
        "@typescript-eslint/no-unsafe-return": 1,
        "@typescript-eslint/no-misused-promises": 0
      }
    }
  ],
  "plugins": [
    "react",
    "import",
    "@typescript-eslint",
    "css-modules",
    "react-hooks",
    "prettier"
  ],
  "settings": {
    "import/resolver": {
      "typescript": {}
    },
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "@typescript-eslint/no-explicit-any": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/display-name": "off",
    "react/react-in-jsx-scope": "off",
    "no-undef": "off",
    "react/prop-types": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "no-case-declarations": "off",
    "@typescript-eslint/no-unsafe-call": 1,
    "import/no-named-as-default": 0,
    "@typescript-eslint/no-unsafe-assignment": 0,
    "@typescript-eslint/no-var-requires": 0,
    "css-modules/no-unused-class": 0,
    "@typescript-eslint/no-floating-promises": 1,
    "import/order": [
      "error",
      {
        "groups": [
          "external",
          "builtin",
          "internal"
        ],
        "newlines-between": "always",
        "pathGroups": [
          {
            "pattern": "store",
            "group": "external",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ]
      }
    ]
  }
}
